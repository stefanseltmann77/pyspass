# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: pip install pipenv
    - name: Install environment
      run: pipenv install --dev
    - name: Lint with flake8
      run: |
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pipenv run pytest --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.4
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        check_name: Unit Test Results
        comment_title: Unit Test Statistics
        hide_comments: all but latest
        comment_on_pr: true
        files: junit/**/*.xml
        report_individual_runs: true
        deduplicate_classes_by_file_name: false
    - name: Build and publish
      if: ${{ success() }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pipenv run python -m build
        pipenv run python -m twine upload dist/* --skip-existing --verbose

